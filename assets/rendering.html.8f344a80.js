import{_ as r,r as a,o as c,c as p,a as e,b as n,d as s,e as d}from"./app.d739b443.js";const D={},h=e("h1",{id:"rendering",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rendering","aria-hidden":"true"},"#"),s(" Rendering")],-1),_=e("h2",{id:"asp-net-core",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#asp-net-core","aria-hidden":"true"},"#"),s(" ASP.NET Core")],-1),u={id:"default-to-using-page-templates-view-components",tabindex:"-1"},y=e("a",{class:"header-anchor",href:"#default-to-using-page-templates-view-components","aria-hidden":"true"},"#",-1),g=s(),m=s(" Default to using Page Templates (+ View Components)"),v=s("If you use Page Templates for a Page Type, and don't have a fallback Razor View for "),C={href:"https://docs.xperience.io/developing-websites/implementing-routing/content-tree-based-routing/setting-up-content-tree-based-routing#Settingupcontenttreebasedrouting-Basic",target:"_blank",rel:"noopener noreferrer"},b=s("Basic Routing"),f=s(", then any Pages of this Page Type defined through the API will need to have their "),w=e("code",null,"DocumentPageTemplateConfiguration",-1),E=s(" field manually set with a valid value."),x=d(`<div class="custom-container tip"><p class="custom-container-title">Assigning a Page Template to a Page Programmatically</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">page</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">HomePage</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">JsonConvert</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">SerializeObject</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">identifier</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&quot;Sandbox.HomePage&quot;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">JsonSerializerSettings</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">ContractResolver</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">CamelCasePropertyNamesContractResolver</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">Formatting</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Formatting</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">page</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">SetValue</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;DocumentPageTemplateConfiguration&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="page-types" tabindex="-1"><a class="header-anchor" href="#page-types" aria-hidden="true">#</a> Page Types</h2>`,2),P={id:"use-route-to-view-or-route-to-page-template-with-content-tree-based-routing",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#use-route-to-view-or-route-to-page-template-with-content-tree-based-routing","aria-hidden":"true"},"#",-1),V=s(),F=s(' Use "Route to View" or "Route to Page Template" with Content Tree based routing'),I=e("h2",{id:"razor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#razor","aria-hidden":"true"},"#"),s(" Razor")],-1),T={id:"keep-view-injected-dependencies-minimal",tabindex:"-1"},B=e("a",{class:"header-anchor",href:"#keep-view-injected-dependencies-minimal","aria-hidden":"true"},"#",-1),N=s(),S=s(" Keep View Injected Dependencies Minimal"),R={id:"break-up-layout-into-smaller-view-components",tabindex:"-1"},A=e("a",{class:"header-anchor",href:"#break-up-layout-into-smaller-view-components","aria-hidden":"true"},"#",-1),z=s(),j=s(" Break up Layout Into Smaller View Components"),q={href:"https://dev.to/seangwright/kentico-xperience-design-patterns-good-layout-hygiene-3ob6",target:"_blank",rel:"noopener noreferrer"},L=s("https://dev.to/seangwright/kentico-xperience-design-patterns-good-layout-hygiene-3ob6"),H={id:"view-components-vs-partial-views",tabindex:"-1"},J=e("a",{class:"header-anchor",href:"#view-components-vs-partial-views","aria-hidden":"true"},"#",-1),K=s(),M=s(" View Components vs Partial Views"),O=e("ul",null,[e("li",null,[s("Leverage View Components over Partial Views "),e("ul",null,[e("li",null,"Better type checking, intellisense")])])],-1);function U(G,Q){const t=a("ConsiderIcon"),i=a("NoteIcon"),l=a("ExternalLinkIcon"),o=a("EssentialIcon");return c(),p("div",null,[h,_,e("h3",u,[y,g,n(t),m]),n(i),e("p",null,[v,e("a",C,[b,n(l)]),f,w,E]),x,e("h3",P,[k,V,n(t),F]),I,e("h3",T,[B,N,n(o),S]),e("h3",R,[A,z,n(o),j]),e("p",null,[e("a",q,[L,n(l)])]),e("h3",H,[J,K,n(o),M]),O])}var X=r(D,[["render",U],["__file","rendering.html.vue"]]);export{X as default};
